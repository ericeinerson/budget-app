// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using budget_app.Data;

#nullable disable

namespace budget_app.Migrations
{
    [DbContext(typeof(BudgetAppDbContext))]
    [Migration("20250525170638_add-foreign-key")]
    partial class addforeignkey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("budget_app.Data.Models.BudgetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("ItemTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("BudgetItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 0m,
                            CategoryId = 2,
                            Date = new DateTime(2025, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 1,
                            Name = "Expense1",
                            Notes = "This was a test rent payment",
                            SecondaryName = "Rent Payment",
                            UserId = 45
                        },
                        new
                        {
                            Id = 2,
                            Amount = 0m,
                            CategoryId = 1,
                            Date = new DateTime(2024, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 2,
                            Name = "Expense2",
                            Notes = "Got chipotle",
                            SecondaryName = "Chipotle",
                            UserId = 45
                        },
                        new
                        {
                            Id = 3,
                            Amount = 0m,
                            CategoryId = 2,
                            Date = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 2,
                            Name = "ThirdExpense",
                            SecondaryName = "Taco Prescription Diet",
                            UserId = 45
                        },
                        new
                        {
                            Id = 4,
                            Amount = 0m,
                            CategoryId = 3,
                            Date = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 1,
                            Name = "Expense7Rent",
                            Notes = "This was another test rent payment",
                            SecondaryName = "Rent Payment",
                            UserId = 49
                        },
                        new
                        {
                            Id = 5,
                            Amount = 0m,
                            CategoryId = 1,
                            Date = new DateTime(1999, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 3,
                            Name = "5.0",
                            Notes = "Got Subway",
                            SecondaryName = "Subs",
                            UserId = 49
                        },
                        new
                        {
                            Id = 6,
                            Amount = 0m,
                            CategoryId = 1,
                            Date = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 1,
                            Name = "Expense",
                            SecondaryName = "6terst",
                            UserId = 49
                        },
                        new
                        {
                            Id = 7,
                            Amount = 0m,
                            CategoryId = 3,
                            Date = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 1,
                            Name = "Music",
                            Notes = "Subscription payment",
                            SecondaryName = "Spotify",
                            UserId = 49
                        },
                        new
                        {
                            Id = 8,
                            Amount = 0m,
                            CategoryId = 3,
                            Date = new DateTime(1954, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 2,
                            Name = "Caffeine",
                            Notes = "Got chipotle",
                            SecondaryName = "McCoffee",
                            UserId = 49
                        },
                        new
                        {
                            Id = 9,
                            Amount = 0m,
                            CategoryId = 4,
                            Date = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemTypeId = 3,
                            Name = "Nine",
                            SecondaryName = "Zelda",
                            UserId = 50002
                        });
                });

            modelBuilder.Entity("budget_app.Data.Models.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rent"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medical"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Miscellaneous"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gym"
                        });
                });

            modelBuilder.Entity("budget_app.Data.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Expense"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Income"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wishlist"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Adjustment"
                        });
                });

            modelBuilder.Entity("budget_app.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 50002,
                            Balance = 10.01m,
                            Name = "Sir Floofsigus"
                        },
                        new
                        {
                            Id = 45,
                            Balance = 110.01m,
                            Name = "Sir Jaxolantern"
                        },
                        new
                        {
                            Id = 49,
                            Balance = 50000.09m,
                            Name = "Tacoramadan"
                        });
                });

            modelBuilder.Entity("budget_app.Data.Models.BudgetItem", b =>
                {
                    b.HasOne("budget_app.Data.Models.Category", "Category")
                        .WithMany("BudgetItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("budget_app.Data.Models.ItemType", "ItemType")
                        .WithMany("BudgetItems")
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("budget_app.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("budget_app.Data.Models.User", null)
                        .WithMany("BudgetItems")
                        .HasForeignKey("UserId1");

                    b.Navigation("Category");

                    b.Navigation("ItemType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("budget_app.Data.Models.Category", b =>
                {
                    b.Navigation("BudgetItems");
                });

            modelBuilder.Entity("budget_app.Data.Models.ItemType", b =>
                {
                    b.Navigation("BudgetItems");
                });

            modelBuilder.Entity("budget_app.Data.Models.User", b =>
                {
                    b.Navigation("BudgetItems");
                });
#pragma warning restore 612, 618
        }
    }
}
